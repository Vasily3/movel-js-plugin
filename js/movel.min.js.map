{"version":3,"sources":["movel.js"],"names":["Movel","elem","getRandomArbitrary","min","max","Math","random","getCoordsTop","getBoundingClientRect","top","pageYOffset","getCoordsLeft","left","pageXOffset","this","document","querySelectorAll","undefined","elemsArr","forEach","call","el","startMove","minDuration","maxDuration","maxTimeout","randomIntDuration","randomIntTimeout","setTimeout","zone","querySelector","minRandomTop","maxRandomTop","minRandomLeft","maxRandomLeft","topMoving","leftMoving","FULL_SIZE","topCords","leftCords","elWidth","width","elHeight","height","zoneWidth","documentElement","clientWidth","zoneHeight","clientHeight","topCordsZone","leftCordsZone","options","start","randomIntTop","randomIntLeft","duration","timing","timeFraction","draw","progress","style","performance","now","requestAnimationFrame","animate","time"],"mappings":"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","file":"movel.min.js","sourcesContent":["'use strict';\n\nfunction Movel(elem) {\n  // Animation\n  function animate(options) {\n    var start = performance.now();\n\n    requestAnimationFrame(function animate(time) {\n      // timeFraction от 0 до 1\n      var timeFraction = (time - start) / options.duration;\n      if (timeFraction > 1) timeFraction = 1;\n\n      // текущее состояние анимации\n      var progress = options.timing(timeFraction);\n\n      options.draw(progress);\n\n      if (timeFraction < 1) {\n        requestAnimationFrame(animate);\n      }\n\n    });\n  }\n\n  // Get random interval min/max\n  function getRandomArbitrary(min, max) {\n    return Math.random() * (max - min) + min;\n  }\n\n  // Get random top coords\n  function getCoordsTop(elem) { // кроме IE8-\n    var box = elem.getBoundingClientRect();\n    var top = box.top + pageYOffset;\n    return top;\n  }\n\n  // Get random left coords\n  function getCoordsLeft(elem) { // кроме IE8-\n    var box = elem.getBoundingClientRect();\n    var left = box.left + pageXOffset;\n    return left;\n  }\n\n  this.elem = document.querySelectorAll(elem.elem);\n\n  if (elem.elem === undefined) {\n    this.elem = document.querySelectorAll(\".moving-element\");\n  }\n\n  var elemsArr = this.elem;\n\n  [].forEach.call(elemsArr, function (el) {\n    // Moving\n    var startMove = function () {\n      var minDuration = elem.minDuration;\n      var maxDuration = elem.maxDuration; // also min timeout\n      var maxTimeout = elem.maxTimeout;\n\n      if (minDuration === undefined) {\n        minDuration = 300;\n      }\n      if (maxDuration === undefined) {\n        maxDuration = 1000;\n      }\n      if (maxTimeout === undefined) {\n        maxTimeout = 3000;\n      }\n\n      var randomIntDuration = getRandomArbitrary(minDuration, maxDuration);\n      var randomIntTimeout = getRandomArbitrary(maxDuration, maxTimeout);\n\n      var moveProcess = function () {\n        this.zone = document.querySelector(elem.zone);\n        var FULL_SIZE = 100; // 100%\n        var topCords = el.getBoundingClientRect().top;\n        var leftCords = el.getBoundingClientRect().left;\n        var elWidth = el.getBoundingClientRect().width;\n        var elHeight = el.getBoundingClientRect().height;\n        var zoneWidth = document.documentElement.clientWidth;\n        var zoneHeight = document.documentElement.clientHeight;\n        var minRandomTop;\n        var maxRandomTop;\n        var minRandomLeft;\n        var maxRandomLeft;\n        var topMoving;\n        var leftMoving;\n\n        if (this.zone !== null) {\n          zoneWidth = this.zone.clientWidth;\n          zoneHeight = this.zone.clientHeight;\n          var topCordsZone = getCoordsTop(this.zone);\n          var leftCordsZone = getCoordsLeft(this.zone);\n          topMoving = getCoordsTop(el) - topCordsZone;\n          leftMoving = getCoordsLeft(el) - leftCordsZone;\n          minRandomTop = topCordsZone;\n          maxRandomTop = topCordsZone + zoneHeight;\n          minRandomLeft = leftCordsZone;\n          maxRandomLeft = leftCordsZone + zoneWidth;\n\n          if (topMoving < maxRandomTop) {\n            minRandomTop = -1 * topMoving;\n          }\n\n          if (leftMoving < maxRandomLeft) {\n            minRandomLeft = -1 * leftMoving;\n          }\n\n          if (zoneHeight - topMoving < maxRandomTop) {\n            maxRandomTop = zoneHeight - topMoving;\n          }\n\n          if (zoneWidth - leftMoving < maxRandomLeft) {\n            maxRandomLeft = zoneWidth - leftMoving;\n          }\n\n          maxRandomTop = maxRandomTop - elHeight;\n          maxRandomLeft = maxRandomLeft - elWidth;\n        } else {\n          minRandomTop = -1 * FULL_SIZE;\n          maxRandomTop = FULL_SIZE;\n          minRandomLeft = -1 * FULL_SIZE;\n          maxRandomLeft = FULL_SIZE;\n\n          elWidth = (elWidth / zoneWidth) * FULL_SIZE;\n          elHeight = (elHeight / zoneHeight) * FULL_SIZE;\n\n          topMoving = (topCords / zoneHeight) * FULL_SIZE;\n          leftMoving = (leftCords / zoneWidth) * FULL_SIZE;\n\n          if (topMoving < maxRandomTop) {\n            minRandomTop = -1 * topMoving;\n          }\n\n          if (FULL_SIZE - topMoving < maxRandomTop) {\n            maxRandomTop = FULL_SIZE - topMoving;\n          }\n\n          if (leftMoving < maxRandomLeft) {\n            minRandomLeft = -1 * leftMoving;\n          }\n\n          if (FULL_SIZE - leftMoving < maxRandomLeft) {\n            maxRandomLeft = FULL_SIZE - leftMoving;\n          }\n\n          maxRandomTop = maxRandomTop - elHeight;\n          maxRandomLeft = maxRandomLeft - elWidth;\n        }\n\n        var randomIntTop = getRandomArbitrary(minRandomTop, maxRandomTop);\n        var randomIntLeft = getRandomArbitrary(minRandomLeft, maxRandomLeft);\n\n        animate({\n          duration: randomIntDuration,\n          timing: function (timeFraction) {\n            return timeFraction;\n          },\n          draw: function (progress) {\n            if (elem.zone) {\n              el.style.top = topMoving + progress * randomIntTop + 'px';\n              el.style.left = leftMoving + progress * randomIntLeft + 'px';\n            } else {\n              el.style.top = topMoving + progress * randomIntTop + '%';\n              el.style.left = leftMoving + progress * randomIntLeft + '%';\n            }\n          }\n        });\n\n        startMove();\n      };\n\n      setTimeout(moveProcess, randomIntTimeout);\n    };\n\n    startMove();\n  });\n}\n"]}